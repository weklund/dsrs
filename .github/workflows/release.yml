name: Release

on:
  push:
    tags:
      - 'v*'

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build Release Binaries
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            suffix: ""
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            suffix: ".exe"
          - os: macos-latest
            target: x86_64-apple-darwin
            suffix: ""
          - os: macos-latest
            target: aarch64-apple-darwin
            suffix: ""
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
      - uses: Swatinem/rust-cache@v2
      - name: Build release binary
        run: cargo build --release --target ${{ matrix.target }}
      - name: Create artifact directory
        run: mkdir artifacts
      - name: Copy binary to artifacts (Unix)
        if: matrix.os != 'windows-latest'
        run: cp target/${{ matrix.target }}/release/dsrs${{ matrix.suffix }} artifacts/dsrs-${{ matrix.target }}${{ matrix.suffix }}
      - name: Copy binary to artifacts (Windows)
        if: matrix.os == 'windows-latest'
        run: copy target\${{ matrix.target }}\release\dsrs${{ matrix.suffix }} artifacts\dsrs-${{ matrix.target }}${{ matrix.suffix }}
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dsrs-${{ matrix.target }}
          path: artifacts/

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Download all artifacts
        uses: actions/download-artifact@v4
      - name: Create release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dsrs-*/dsrs-*
          generate_release_notes: true
          draft: false
          prerelease: false